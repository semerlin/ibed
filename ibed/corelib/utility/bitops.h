#ifndef BITOPS_H
#define BITOPS_H

#include "utility_global.h"

class UTILITYSHARED_EXPORT Bitops
{
public:
    /********************************************************************************
    * 函数: static inline int32_t generic_ffs(__in int32_t x)
    * 描述: 找到第一个置1的位，从低位往高位找
    * 输入: x: 需要查找的数据
    * 输出: none
    * 返回: 第一个置1的位置
    * 作者:
    * 版本: v1.0
    **********************************************************************************/
    static int generic_ffs(int x);

    /********************************************************************************
    * 函数: static inline int32_t generic_fls(__in int32_t x)
    * 描述: 找到最后一个置1的位置
    * 输入: x: 需要查找的数据
    * 输出: none
    * 返回: 最后一个置1的位置
    * 作者:
    * 版本: v1.0
    **********************************************************************************/
    static int generic_fls(int x);

    /********************************************************************************
    * 函数: static inline uint32_t generic_hweight32(__in uint32_t w)
    * 描述: 计算32位汉明权重
    * 输入: w: 需要计算的数据
    * 输出: none
    * 返回: 数据中为1的位的个数
    * 作者:
    * 版本: v1.0
    **********************************************************************************/
    static quint32 generic_hweight32(quint32 w);

    /********************************************************************************
    * 函数: static inline uint32_t generic_hweight16(__in uint16_t w)
    * 描述: 计算16位汉明权重
    * 输入: w: 需要计算的数据
    * 输出: none
    * 返回: 数据中为1的位的个数
    * 作者:
    * 版本: v1.0
    **********************************************************************************/
    static quint32 generic_hweight16(quint16 w);

    /********************************************************************************
    * 函数: static inline uint32_t generic_hweight8(__in uint8_t w)
    * 描述: 计算8位汉明权重
    * 输入: w: 需要计算的数据
    * 输出: none
    * 返回: 数据中为1的位的个数
    * 作者:
    * 版本: v1.0
    **********************************************************************************/
    static quint32 generic_hweight8(quint8 w);
};

#endif // BITOPS_H




